#include <iostream>

#include "../../TemplateEngine/include/TemplateEngine.hpp"
namespace te = template_engine;

int main(int argc, char **argv)
{
    // Template to compile
    te::StringScanner reader(TE_TEXT("<!-- Generated by {{APP}}-{{VERSION}} on {{TIME}}-->\n"
	"<form>\n"
	"\t{{FIRSTNAME}}:<br>\n"
	"\t<input type=\"text\" name=\"firstname\">\n"
	"\t<br>\n"
	"\t{{LASTNAME}}:<br>\n"
	"\t<input type=\"text\" name=\"lastname\">\n"
	"</form>"));
    
    // Build the dictionary
    te::DictionaryPtr root = std::make_shared<te::Dictionary>();
    root->add(TE_TEXT("FIRSTNAME"), TE_TEXT("PrÃ©nom"));
    root->add(TE_TEXT("LASTNAME"), TE_TEXT("Nom de famille"));
    
    // Setup the template context
    te::ContextPtr context = te::Context::BuildContext();

    // Add root dictionary to context
    context->setDictionary(root);
    
    // compile the template
    te::TemplatePtr compiledTemplate = te::Template::parse(reader);

    // render the template
    te::te_string result = compiledTemplate->render(context);

    // convert template result to UTF-8
    te::te_converter converter;

    // print the generated template
    std::cout << converter.to_bytes(result) << std::endl;

    return 0;
}
